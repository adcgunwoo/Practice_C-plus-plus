
/*    특성	        포인터(Pointer)	              레퍼런스(Reference)
기본 개념	      | 메모리 주소를 저장하고 관리하는 변수	    | 변수의 별명, 참조
NULL 값 가능 여부 |	NULL 값을 가질 수 있음	NULL을 가질 수 없음 |
재할당 가능 여부  |	재할당 가능	                                | 재할당 불가                    
사용법	          |  주소 연산자(&), 역참조(*) 필요	            | 주소 연산 없이 변수처럼 사용 가능
안전성	          |  포인터 오류 가능(NULL, 잘못된 주소 등)	    | 더 안전하며, 변수처럼 사용
동적 메모리 할당  |	동적 메모리 할당에 사용 가능	            | 동적 메모리 할당에 사용되지 않음

결론 : C++에서는 레퍼런스가 포인터보다 더 안전하고 직관적인 선택이지만
동적 메모리 관리나 NULL을 사용할 때는 포인터가 여전히 중요한 역할을 한다.
*/
